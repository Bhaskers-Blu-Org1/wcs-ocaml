(*
 *  This file is part of the Watson Conversation Service OCaml API project.
 *
 * Copyright 2016-2017 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

<doc text="Watson Conversation Service data structures.

   Data srcutures used in Watson Conversation Service.

   Based on the documentation available at:
   https://www.ibm.com/watson/developercloud/conversation/api/v1/

   Version 2017-05-26.
">

type json <ocaml module="Json_t"> = abstract
<doc text="Type of arbitraty JSON values.">

(** {6 Credentials} *)


type credential = {
    ~url <ocaml default="\"https://gateway.watsonplatform.net/conversation/api\""> : string;
    password : string;
    username : string;
  } <ocaml field_prefix="cred_">
<doc text="Watson Conversation Service credentials.">

type version = [
  | V_2017_05_26
  ] (* <ocaml repr="classic"> *)
<doc text="Supported versions">

(** {6 Workspaces } *)


(** {8 List workspaces} *)

type sort_workspace_criteria = [
  | Sort_name_incr <json name="name">
  | Sort_modified_incr <json name="modified">
  | Sort_workspace_id_incr <json name="workspace_id">
  | Sort_name_decr <json name="-name">
  | Sort_modified_decr <json name="-modified">
  | Sort_workspace_id_decr <json name="-workspace_id">
  ] (* <ocaml repr="classic"> *)
<doc text="Sorting criteria for list of workspaces.">


type workspace_response = {
    name : string nullable;
    description : string nullable;
    language : string nullable;
    metadata : json nullable;
    created : string nullable;
    updated : string nullable;
    workspace_id : string;
  } <ocaml field_prefix="ws_rsp_">
<doc text="A workspace metadata.">

type pagination_response = {
    ?refresh_url : string nullable;
    ?next_url : string nullable;
    ?total : int nullable;
    ?matched : int nullable;
  } <ocaml field_prefix="pag_">
<doc text="Pagination information">

type list_workspaces_request = {
    (* ~version <ocaml default="`V_2017_05_26"> : version; *)
    ?page_limit : int nullable;
    ?include_count : bool nullable;
    ?sort : sort_workspace_criteria nullable;
    ?cursor : string nullable;
  } <ocaml field_prefix="list_ws_req_">
<doc text="Request the list of workspaces.">

type list_workspaces_response = {
    workspaces : workspace_response list;
    pagination : pagination_response;
  } <ocaml field_prefix="list_ws_rsp_">
<doc text="Response to the list of workspaces request.">

type intent_example = {
    text : string;
    ?created : string nullable;
  } <ocaml field_prefix="ex_">
<doc text="Type of intent examples.">

type intent_def = {
    intent : string;
    ?description : string nullable;
    ~examples : intent_example list;
    ?created : string nullable;
  } <ocaml field_prefix="i_def_">
<doc text="Type of intent definitions.">

type entity_value = {
    value : string;
    ?metadata : json nullable;
    ~synonyms : string list;
    ?created : string nullable;
  } <ocaml field_prefix="e_">
<doc text="Type of entity values.">

type entity_def = {
    entity : string;
    ?description : string nullable;
    (* ?type : string nullable; *)
    ?source : string nullable;
    ?open_list : bool option;
    ~values : entity_value list;
    ?created : string nullable;
  } <ocaml field_prefix="e_def_">
<doc text="Type of entity definitions.">

type selector = [
  | Goto_user_input <json name="user_input">
  | Goto_condition <json name="condition">
  | Goto_body <json name="body">
] <ocaml repr="classic">
<doc text="Goto selector.">

type go_to = {
    ~return <ocaml default="false"> : bool;
    selector : selector;
    dialog_node : string;
  } <ocaml field_prefix="goto_">
<doc text="Type of goto definitions.">

type output_def = json
<doc text="Type of outputs of a dialog node.">

type dialog_node_type = [
  | Node_response_condition <json name="response_condition">
  | Node_frame <json name="frame">
  | Node_event_handler <json name="event_handler">
  | Node_slot <json name="slot">
] <ocaml repr="classic">
<doc text="Dialog node type.">

type dialog_node_event_name = [
  | Evt_focus <json name="focus">
  | Evt_input <json name="input">
  | Evt_nomatch <json name="nomatch">
  | Evt_filled <json name="filled">
  | Evt_generic <json name="generic">
]

type dialog_node = {
    dialog_node : string;
    ?type_ <json name="type"> : dialog_node_type nullable;
    ?description : string nullable;
    ?conditions : string nullable;
    ?parent : string nullable;
    ?previous_sibling : string nullable;
    ?output : output_def nullable;
    ?context : json nullable;
    ?metadata : json nullable;
    ?go_to : go_to nullable;
    ?child_input_kind : string nullable;
    ?created : string nullable;
    ?event_name : dialog_node_event_name nullable;
    ?variable : string nullable;
  } <ocaml field_prefix="node_">
<doc text="Type of dialog nodes.">

type workspace = {
    name : string nullable;
    ?description : string nullable;
    ?language : string nullable;
    ?metadata : json nullable;
    ~counterexamples : intent_example list;
    ~dialog_nodes : dialog_node list;
    ~entities : entity_def list;
    ~intents : intent_def list;
    ?created : string nullable;
    ?modified : string nullable;
    ?created_by : string nullable;
    ?modified_by : string nullable;
    ?workspace_id : string nullable;
  } <ocaml field_prefix="ws_">
<doc text="Type of workspaces">


(** {6 Types for the [message] method} *)

type input = {
    text : string;
  } <ocaml field_prefix="in_">

type entity = {
    entity : string;
    location : json;
    value : string;
  } <ocaml field_prefix="e_">

type intent = {
    intent : string;
    confidence : float;
  } <ocaml field_prefix="i_">

type output = {
    log_messages : json;
    text : string list;
    nodes_visited : string list;
    ?error : string nullable;
  } <ocaml field_prefix="out_">

type message_request = {
    input : input;
    ~alternate_intents <ocaml default="false"> : bool;
    ?context : json option;
    ?entities : entity list option;
    ?intents : intent list option;
    ?output : output option;
  } <ocaml field_prefix="msg_req_">

type message_response = {
    input : input;
    ~alternate_intents <ocaml default="false"> : bool;
    context : json;
    entities : entity list;
    intents : intent list;
    output : output;
  } <ocaml field_prefix="msg_rsp_">

(** {6 Types for the workspace creation method } *)

type create_response = {
    ?name : string nullable;
    ?created : string nullable;
    ?updated : string nullable;
    ?language : string nullable;
    ?metadata : string nullable;
    ?description : string nullable;
    ?workspace_id : string nullable;
  } <ocaml field_prefix="crea_rsp_">

(** {6 Types for the workspace get method } *)

type get_workspace_request = {
    workspace_id : string;
    ?export : bool nullable;
  } <ocaml field_prefix="get_ws_req_">


(** {6 Action} *)

type action = {
    name : string;
    ~agent <ocaml default="\"client\""> : string;
    ~type_ <json name="type"> <ocaml default="\"conversation\""> : string;
    ~parameters <ocaml default="`Null"> : json;
    ?result_variable : string nullable;
  } <ocaml field_prefix="act_">


(** {6 Logs} *)

type sort_logs_criteria = [
  | Sort_request_timestamp_incr <json name="request_timestamp">
  | Sort_request_timestamp_decr <json name="-name">
  ] (* <ocaml repr="classic"> *)
<doc text="Sorting criteria for logs.">

type log_entry = {
    request : message_request;
    response : message_response;
    log_id : string;
    request_timestamp : string;
    response_timestamp : string;
  } <ocaml field_prefix="log_">

type logs_request = {
    ?filter : string nullable;
    ?sort : sort_logs_criteria nullable;
    ?page_limit : int nullable;
    ?cursor : string nullable;
  } <ocaml field_prefix="logs_">
<doc text="Request for the list the events from the log of a workspace.">

type logs_response = {
    logs : log_entry list;
    pagination : pagination_response;
  } <ocaml field_prefix="logs_rsp_">
